# Read `man 5 sway` for a complete reference.

set $locktime 3600
set $offtime 5000

set $lockcmd 'swaylock -f -e -k -c 181926'

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l


# Display
set $out-prim DP-1
set $out-sec DP-2

set $resize-step 30px


# Apps

# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi 

set $bar waybar

set $acCol #f5bde6
set $textC #181926

# Colours
# class                 border  backgr. text    indicator child_border
client.focused          $acCol  $acCol  $textC  #000000   $textC

# Gaps
gaps inner 3
gaps outer 0
smart_gaps on

exec --no-startup-id /usr/lib/xdg-desktop-portal -r
exec gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-Dark'

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $HOME/.pic/FTL.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output eDP-1 scale 1.5

output $out-prim resolution 3840x2160 position 0 0 scale 1.5

# 2880 is 3840*1.75
output $out-sec resolution 1920x1080 position 2560 -400 transform 90

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout $locktime $lockcmd \
         timeout $offtime 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep $lockcmd




### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# DWT = disable while typing

# Dell
input "1739:30382:DLL0704:01_06CB:76AE_Touchpad" {
    tap enabled
    dwt enabled
    scroll_factor 0.2
}

# Macbook
input "1452:833:Apple_Internal_Keyboard_/_Trackpad" {
   natural_scroll disabled
   scroll_factor 0.15
}


# Notification Daemon
exec dunst

# KDE auth thing passwd
exec /usr/lib/polkit-kde-authentication-agent-1

# Toggle control center
bindsym $mod+Shift+n exec swaync-client -t -sw

# reload swaync
bindsym $mod+Shift+Ctrl+n exec swaync-client -R


# Emoji selector
bindsym $mod+semicolon exec ~/.scripts/rofi-emoji-paster

### Key bindings
#
# Basics:
#
bindgesture swipe:right workspace next
bindgesture swipe:left workspace prev
bindgesture swipe:up exec $menu -show window


# space bar fix
# bindsym Alt_R exec wtype -k "space"

# Delete key alt
bindsym Mod1+backspace exec wtype -P delete -p delete



# greek alphabet function keys
bindsym XF86Fn+a exec wtype α
bindsym XF86Fn+Shift+a exec wtype Α
bindsym XF86Fn+b exec wtype β
bindsym XF86Fn+Shift+b exec wtype Β
bindsym XF86Fn+g exec wtype γ
bindsym XF86Fn+Shift+g exec wtype Γ
bindsym XF86Fn+d exec wtype δ
bindsym XF86Fn+Shift+d exec wtype Δ
bindsym XF86Fn+e exec wtype ε
bindsym XF86Fn+Shift+e exec wtype Ε
bindsym XF86Fn+z exec wtype ζ
bindsym XF86Fn+Shift+z exec wtype Ζ
bindsym XF86Fn+h exec wtype η
bindsym XF86Fn+Shift+h exec wtype Η
bindsym XF86Fn+q exec wtype θ
bindsym XF86Fn+Shift+q exec wtype Θ
bindsym XF86Fn+i exec wtype ι
bindsym XF86Fn+Shift+i exec wtype Ι
bindsym XF86Fn+k exec wtype κ
bindsym XF86Fn+Shift+k exec wtype Κ
bindsym XF86Fn+l exec wtype λ
bindsym XF86Fn+Shift+l exec wtype Λ
bindsym XF86Fn+m exec wtype μ
bindsym XF86Fn+Shift+m exec wtype Μ
bindsym XF86Fn+n exec wtype ν
bindsym XF86Fn+Shift+n exec wtype Ν
bindsym XF86Fn+x exec wtype ξ
bindsym XF86Fn+Shift+x exec wtype Ξ
bindsym XF86Fn+o exec wtype ο
bindsym XF86Fn+Shift+o exec wtype Ο
bindsym XF86Fn+p exec wtype π
bindsym XF86Fn+Shift+p exec wtype Π
bindsym XF86Fn+r exec wtype ρ
bindsym XF86Fn+Shift+r exec wtype Ρ
bindsym XF86Fn+s exec wtype σ
bindsym XF86Fn+Shift+s exec wtype Σ
bindsym XF86Fn+t exec wtype τ
bindsym XF86Fn+Shift+t exec wtype Τ
bindsym XF86Fn+y exec wtype υ
bindsym XF86Fn+Shift+y exec wtype Υ
bindsym XF86Fn+f exec wtype φ
bindsym XF86Fn+Shift+f exec wtype Φ
bindsym XF86Fn+j exec wtype χ
bindsym XF86Fn+Shift+j exec wtype Χ
bindsym XF86Fn+v exec wtype ψ
bindsym XF86Fn+Shift+v exec wtype Ψ
bindsym XF86Fn+w exec wtype ω
bindsym XF86Fn+Shift+w exec wtype Ω

bindsym XF86Fn+Mod1+l exec cat $HOME/email.txt | wl-copy

    # App launching

    ## Start your launcher
    bindsym $mod+space exec $menu -show drun

    # search windows
    bindsym $mod+tab exec $menu -show window

    # run calc
    #bindsym $mod+Mod1+space exec rofi -show calc -modi calc -no-show-match -no-sort
    #bindsym $mod+Mod1+space exec kcalc
    bindsym $mod+Mod1+space exec alacritty -T Calculator -e qalc

    # run term
    bindsym $mod+Return exec $term

    # browser (firefox)
    bindsym $mod+Shift+b exec MOZ_ENABLE_WAYLAND=1 firefox 

    # Steam
    bindsym $mod+Shift+s exec steam

    # factorio
    bindsym $mod+Shift+f exec /home/d/.local/share/Steam/steamapps/common/Factorio/bin/x64/factorio

    #kill window
    bindsym $mod+q kill


    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+m exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # lock screen
    bindsym $mod+delete exec $lockcmd
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1 
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6 
    bindsym $mod+7 workspace number 7 
    bindsym $mod+8 workspace number 8 
    bindsym $mod+9 workspace number 9 
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10



#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+backslash floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width $resize-step
    bindsym $down resize grow height $resize-step
    bindsym $up resize shrink height $resize-step
    bindsym $right resize grow width $resize-step

    # Ditto, with arrow keys
    bindsym Left resize shrink width $resize-step
    bindsym Down resize grow height $resize-step
    bindsym Up resize shrink height $resize-step
    bindsym Right resize grow width $resize-step

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Screen shot/screenshot
# Screen capture stuff

# select part of screen
bindsym $mod+Print exec slurp | grim -g - - | wl-copy && dunstify "Selection screenshot taken"

# Active window
bindsym $mod+Shift+Print exec swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | grim -g - - | wl-copy && dunstify "Selected window screenshot taken"

# Whole screen
bindsym $mod+Control+Print exec grim - | wl-copy && dunstify "Whole workspace sheenshot taken"

# System shortcuts
set $displayVolume dunstify "Progress: " -h int:value:"`pactl get-sink-volume @DEFAULT_SINK@ | egrep -m 1 -o "[0-9]*%" | head -n 1`"

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && $displayVolume
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && $displayVolume
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

set $brightStep 5%
set $brightExpo 5
set $brightNotif dunstify "Brightness: " -h int:value:"`brightnessctl | egrep -o "[0-9]+%" | sed "s/%//g"`" 

bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +$brightStep -e$brightExpo && $brightNotif
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set $brightStep- -e$brightExpo && $brightNotif


# cat!
bindsym XF86Search exec kate $HOME/.scripts/cat.txt

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {

    swaybar_command $bar

#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %X'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
}

exec sworkstyle &> /tmp/sworkstyle.log


# Night shift 
## This doesnt work :(
exec gammastep -l geoclue2 >> gammalog

exec echo "a" >>  a.txt

include /etc/sway/config.d/*
