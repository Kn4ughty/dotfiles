# Read `man 5 sway` for a complete reference.

set $locktime 3600
set $offtime 5000

set $lockcmd 'swaylock -f -e -k -l -c 181926 -i $HOME/.pic/space1.png'
# set $lockcmd 'hyprlock'
set $calc 'alacritty --config-file $HOME/.config/alacritty/alacritty_calc.toml -T Term-Calculator -e qalc'
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l


# Display
set $out-prim DP-1
set $out-sec DP-2

output eDP-1 scale 1.4

output $out-prim resolution 1920x1080 position 0 0 scale 1 adaptive_sync off

# 2880 is 3840*1.75
output $out-sec resolution 3840x2160 position 1920 0 scale 2

output HDMI-A-1 resolution 1920x1080 position 3840 0
# output HDMI-A-1 resolution 1920x1080 position 5760 -580

workspace 1 output $out-sec
workspace 2 output HDMI-A-1
workspace 3 output $out-prim

### Wallpaper
output * bg $HOME/.pic/space1.jpg fill
# output * bg $HOME/.pic/ayuru_camp___rin___nadeshiko_by_muddymelly_dcmp6rk.jpg fill
# output * bg $HOME/.pic/cloud_real.jpg fill
# output * bg $HOME/.pic/teapot.png fill
# output * bg $HOME/.pic/teapot-alt.png fill
# output * bg #000000 solid_color




# Apps

# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi 

set $file thunar

set $acCol #f5bde6
set $secCol #89b4fa
set $textC #181926

set $borderCol $acCol

# Colours
# class                 border  backgr. text    indicator child_border
client.focused          $acCol  $acCol  $textC  $secCol   $borderCol

font pango:JetBrainsMono NF 10

# Gaps
# was inner 3
gaps inner 6
gaps outer 3
smart_gaps false

workspace 10 gaps inner 15
workspace 10 gaps outer 10

# swayfx things
blur enable
blur_passes 2
blur_radius 8
blur_noise 0
blur_brightness 0.8
blur_contrast 1
blur_saturation 1.1

shadows disabled
shadow_blur_radius 20
shadow_color $acColff

# was 15
corner_radius 15

# app spefcific swayfx
# layer_effects "waybar" blur enable; shadows enable
for_window [app_id="one.alynx.showmethekey" title="Floating Window - Show Me The Key"] {
  floating enable
  sticky enable
}
for_window [shell="xwayland"] title_format "[XWayland] %title"


focus_on_window_activation smart
focus_wrapping no

for_window [all] title_window_icon yes

default_border pixel

# app floating settings
for_window [title="Term-Calculator"] floating enable
for_window [title="Term-Calculator"] resize set width 300
for_window [title="Term-Calculator"] resize set height 500

# arch wiki said this will make xdg-desktop-portal-wlr start automatically
exec systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

exec --no-startup-id /usr/lib/xdg-desktop-portal -r
seat seat0 xcursor_theme Bibata-Modern-Classic 28
exec gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-Dark'


### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout $locktime $lockcmd \
         timeout $offtime 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep $lockcmd

# Notification Daemon
# exec dunst
exec swaync

# KDE auth thing passwd
exec /usr/lib/polkit-kde-authentication-agent-1

# Exec binary space partitioning script
# exec ~/.config/sway/bsp.sh

exec kanata --cfg ~/.config/kanata/conf.kbd

primary_selection disabled

# Dell
input "1739:30382:DLL0704:01_06CB:76AE_Touchpad" {
    tap enabled
    dwt enabled
    scroll_factor 0.2
}
# keyboard layout

input * {
    xkb_layout us
    accel_profile "flat"
    # NOTE TO FUTURE ME
    # Only enable this if you KNOW the layout fully. 
    # Also work out how to make vim work with new binds. (hjkl)
    # xkb_variant colemak

    pointer_accel 0.3
}
# Macbook
input "1452:833:Apple_SPI_Trackpad" {
   natural_scroll true
   scroll_factor 0.15
   pointer_accel 0 # Disabled :P
}

input "1133:45114:LOGI_M240_Mouse" {
    pointer_accel -0.1
}


# Toggle control center
bindsym $mod+Shift+Mod1+n exec swaync-client -t -sw

# reload swaync
bindsym $mod+Shift+Ctrl+n exec swaync-client -R 


# Emoji selector
bindsym $mod+semicolon exec ~/.scripts/rofi-emoji-paster

### Key bindings
#
# Basics:
#
bindgesture swipe:right workspace next
bindgesture swipe:left workspace prev
bindgesture swipe:up exec $menu -show window


# space bar fix
# bindsym Alt_R exec wtype -k "space"

# Delete key alt
bindsym Mod1+backspace exec wtype -P delete -p delete

# App launching

## Start your launcher
# bindsym $mod+space exec cd ~/code/Lumin && make run
bindsym $mod+space exec lumin

# search windows
#bindsym $mod+tab exec $menu -show window

# run calc
bindsym $mod+Mod1+space exec $calc

# run term
bindsym $mod+Return exec $term

# run neovide (nvim gui)
# bindsym $mod+n exec ~/.cargo/bin/neovide

# browser (firefox)
bindsym $mod+Shift+b exec MOZ_ENABLE_WAYLAND=1 firefox 

# Neovide
bindsym $mod+Shift+n exec neovide

# file explorer
bindsym $mod+Shift+e exec $file

# Steam
bindsym $mod+Shift+s exec steam

# factorio
bindsym $mod+Shift+f exec /home/d/.local/share/Steam/steamapps/common/Factorio/bin/x64/factorio

# Obsidian (notes)
bindsym $mod+Shift+o exec flatpak run md.obsidian.Obsidian

# Stopwatch
bindsym $mod+Shift+t exec cd ~/code/stopwatch/ && ./.venv/bin/python main.py

#kill window
bindsym $mod+q kill


floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c exec swaymsg reload && eww reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+m exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# lock screen
bindsym $mod+delete exec $lockcmd


# Mouse follows focus
mouse_warping container


focus_follows_mouse yes


# Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    # bindsym $mod+Left focus left
    # bindsym $mod+Down focus down
    # bindsym $mod+Up focus up
    # bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    # bindsym $mod+Shift+Left move left
    # bindsym $mod+Shift+Down move down
    # bindsym $mod+Shift+Up move up
    # bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1 
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6 
    bindsym $mod+7 workspace number 7 
    bindsym $mod+8 workspace number 8 
    bindsym $mod+9 workspace number 9 
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10



#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv
    bindsym $mod+e layout toggle split

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+backslash floating toggle
    bindsym $mod+apostrophe sticky toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+g focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

    # THis is AWESOME.
    # I can summon a window to appear by a shortcut
    bindsym $mod+Mod1+t [title="^To[d|D]o"] scratchpad show
    bindsym $mod+Mod1+c [title="Calendar"] scratchpad show

#
# Resizing containers:
#

set $resize-step 50px
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width $resize-step
    bindsym $down resize grow height $resize-step
    bindsym $up resize shrink height $resize-step
    bindsym $right resize grow width $resize-step

    # Ditto, with arrow keys
    bindsym Left resize shrink width $resize-step
    bindsym Down resize grow height $resize-step
    bindsym Up resize shrink height $resize-step
    bindsym Right resize grow width $resize-step

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Screen shot/screenshot
# Screen capture stuff

# select part of screen
bindsym $mod+Print exec slurp | grim -g - - | wl-copy && dunstify "Selection screenshot taken"

# Active window
bindsym $mod+Shift+Print exec swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | grim -g - - | wl-copy && dunstify "Selected window screenshot taken"

# Whole screen
bindsym $mod+Control+Print exec grim - | wl-copy && dunstify "Whole workspace sheenshot taken"

# Drawing program
bindsym $mod+Shift+D exec cd ~/code/screenshot_painter/ && make run


# System shortcuts
# set $displayVolume dunstify "Progress: " -h int:value:"`pactl get-sink-volume @DEFAULT_SINK@ | egrep -m 1 -o "[0-9]*%" | head -n 1`"
set $displayVolume echo 1

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && $displayVolume
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && $displayVolume
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

set $brightStep 5%
set $brightExpo 5
# set $brightNotif dunstify "Brightness: " -h int:value:"`brightnessctl | egrep -o "[0-9]+%" | sed "s/%//g"`" 
set $brightNotif echo 1

bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +$brightStep -e$brightExpo && $brightNotif
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set $brightStep- -e$brightExpo && $brightNotif

# Keyboard brightness
set $kbd_light_step 50
#bindsym XF86KbdBrightnessUp exec --no-startup-id $HOME/.scripts/kb-light.py + $kb_light_step
#bindsym XF86KbdBrightnessDown exec --no-startup-id $HOME/.scripts/kb-light.py - $kb_light_step
bindsym XF86KbdBrightnessDown exec $HOME/.scripts/1but-kb-light.py 

bindsym XF86KbdBrightnessUp exec wtype -P end

# cat!
bindsym XF86Search exec alacritty -e less $HOME/.scripts/cat.txt

# cat videos!
bindsym $mod+Control+Shift+a exec xdg-open 'https://www.youtube.com/watch?v=9J62hGda9BQ' && xdg-open 'https://www.youtube.com/watch?v=YRvOePz2OqQ'&& xdg-open 'https://www.youtube.com/watch?v=2GgiZZhO-PA' && xdg-open 'https://www.youtube.com/watch?v=0sTGxJ7rp9w' && xdg-open 'https://www.youtube.com/watch?v=WhpNmxKIt78' && xdg-open 'https://www.youtube.com/watch?v=zWLAbNHn5Ho'


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#
#     swaybar_command $bar
#
#     mode hide
# #    position top
# #
# #    # When the status_command prints a new line to stdout, swaybar updates.
# #    # The default just shows the current date and time.
# #    status_command while date +'%Y-%m-%d %X'; do sleep 1; done
# #
# #    colors {
# #        statusline #ffffff
# #        background #323232
# #        inactive_workspace #32323200 #32323200 #5c5c5c
# #    }
# }

# exec sworkstyle


include $HOME/.config/sway/sway.d/*.conf
include /etc/sway/config.d/*

# Include device specfic configs
include $HOME/.config/sway/hosts/$(hostname)/*.conf
