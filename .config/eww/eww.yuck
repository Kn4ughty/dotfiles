(include "./music.yuck")
(include "./templates.yuck")




(defpoll time_str :interval "1s"
              :initial "initial-value"  ; optional, defaults to poll at startup
              :run-while time-visible   ; optional, defaults to 'true'
  `date +%H:%M:%S | sed 's/0/O/g'`)



(defwidget time []
    (info-box
        (label 
            :class "heading"
            :text time_str)
    )

)


(defwidget graph_gen [label name value ?duration]
    (info-box
    (box
        :orientation "vertical"
        :space-evenly false
        :class 'graph_widget'
        ; Where the graph goes
        (box 
            :vexpand true
            :space-evenly false
                (label
                    :text "${label}"
                    :halign "start"
                    :justify "left"
                    :width 10
                    :angle 0
                )
            (box
                :class '${label}_graph_box graph_box'
                :orientation 'horizontal'
                :halign 'fill'
                :hexpand true

                (graph
                    :halign 'fill'
                    :hexpand true
                    :class "${name}_graph"
                    :value value
                    :time-range {duration == "" ? "20s" : duration}
                    :max 100
                    :line-style "round"
                    :thickness 5.0
                )
            )
        )
        ; Graph labels
        (box 
            :class 'graph_label'
            :orientation 'horizontal'
            ;:height 10
            :vexpand false
            :valign 'center'
            :space-evenly true
            (label
                :text {duration == "" ? "20s" : duration})
            (label
                :text "${value}%")
            (label
                :text "0s")

        )
    )
    )
)

(defwidget sys_info []
    (box 
        :orientation "vertical"
        (graph_gen 
            :label "C
P
U"
            :name "cpu"
            :value "${round(jq(EWW_CPU, '.avg'), 1)}"
        )
        (graph_gen
            :label "M
E
M"
            :name "mem"
            :value "${round(jq(EWW_RAM, '.used_mem_perc'), 1)}"
            :duration "60s"
        )
    )
)

(defwindow background
    :monitor '["<primary>", "Y25-30", "0"]'
    :geometry (geometry :x "0%"
                        :y "0%"
                        :width "100%"
                        :height "100%"
                        :anchor "center")
    :stacking "bottom"
    :windowtype "dock"
    :wm-ignore false
    (box
        :orientation "horizontal"
        (box
        ;:height 10
        :halign "start"
        :valign "start"
        :hexpand true
        :vexpand true
        :class "left_box"
            (time)
        )
        (box
        :orientation "vertical"
        :space-evenly false
        :halign "end"
        :valign "start"
        :hexpand false
        :vexpand true
        :class "left_box"
            ; i cant seem to make music go to bottom but this will do
            (box :valign "start"
                (sys_info)
            )
            (box :valign "end"
                (music_info)
            )
        )
    )

)

