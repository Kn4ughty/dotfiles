(defvar time-visible false)   ; for :run-while property of below variable
                              ; when this turns true, the polling starts and
                              ; var gets updated with given interval

(defpoll time :interval "1s"
              :initial "initial-value"  ; optional, defaults to poll at startup
              :run-while time-visible   ; optional, defaults to 'true'
  `date +%H:%M:%S`)

;; Music vars
(defpoll SONG :interval "1s" `$HOME/.scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `$HOME/.scripts/music_info --artist`)
(defpoll COVER :interval "1s" `$HOME/.scripts/music_info --cover`)
(defpoll STATUS :interval "1s" `$HOME/.scripts/music_info --status`)


(defwindow time
           :monitor 0
           :geometry (geometry :x "2%"
                               :y "0%"
                               :width "30%"
                               :height "20%"
                               :anchor "top left")
           :stacking "bottom"
           :reserve (struts :distance "40px" :side "top")
           :windowtype "dock"
           :wm-ignore false
           time)

(defwidget music [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
				(box :class "musicbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
					(label :class "song" :halign "start" :wrap "false" :limit-width 20 :text SONG)
					(label :class "artist" :halign "start" :wrap "false" :limit-width 20 :text ARTIST)))
			(box :class "musicbuttons" :orientation "h" :spacing 10 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('images/icons/music/previous-button.png');" :class "trackbutton" :onclick "scripts/music_info --prev")
				(button :style "background-image: url('${STATUS}');" :class "playbutton" :onclick "scripts/music_info --toggle")
				(button :style "background-image: url('images/icons/music/next-button.png');" :class "trackbutton" :onclick "scripts/music_info --next"))))

(defwindow music
           :monitor 0
           :geometry (geometry :x "990px"
                               :y "20px"
                               :width "400px"
                               :height "60px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(music))
