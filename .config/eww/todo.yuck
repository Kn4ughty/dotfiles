(include "./templates.yuck")

(defvar IS_TIME_RELATIVE false)
(defvar TIME_FORMAT "%b %m-%d")
(defvar TIME_FORMAT_RELATIVE "%-j day %H:%M:%S")

(defvar SHOW_CALENDAR false)
(defvar SELECTED_ID 0)
(defvar SELECTED_TASK '{"id": 0, "text": "", "checked": false, "due": 0}')

(deflisten todo_list
    `~/.scripts/todo.py watch`)

(defwidget todo_item [id text done due]
    (box :class "todo_item" :space-evenly false :orientation "h"
        (eventbox :cursor "pointer" :halign "start" :hexpand true
            :onclick `~/.scripts/todo.py update --id=${id} --checked=${!done*1}`
            (box
                (label :text {done == true ? "" : ""} 
                    :class "checkbox ${done ? 'ticked' : ''}")
                (label :text {text} :halign "start"))
            )
            ;(checkbox :checked {done}
            ;    :onchecked `~/.scripts/todo.py update --id=${id} --checked=1`
            ;    :onunchecked `~/.scripts/todo.py update --id=${id} --checked=0`)
        (box :halign "end" :space-evenly false
            ; Select date
            ;(box :class "button"
            ;(eventbox :onclick `eww update SHOW_CALENDAR=${!SHOW_CALENDAR} SELECTED_ID=${id} SELECTED_TASK='${jq(todo_list, "select(.[].id == ${SELECTED_ID})")}'`
            ;    :cursor "pointer"
            ;    (label 
            ;        :text {formattime(due, TIME_FORMAT)}
            ;        :tooltip {formattime(due - EWW_TIME, TIME_FORMAT_RELATIVE)})))
            ; Delete task
            (box :class "button"
            (eventbox :halign "end" 
                :cursor "pointer"
                :onclick `~/.scripts/todo.py delete --id=${id}` "󰆴")))
    )
)

(defwidget todo_overview []
(info-box (box :space-evenly false :orientation "v"
    (input :onaccept `~/.scripts/todo.py add --text="{}"`)
    (box :orientation "v"
        (for entry in todo_list
            (todo_item 
                :id "${entry.id}"
                :text "${entry.text}" 
                :done "${entry.checked}"
                :due "${entry.due}"
            )
        ))
    (revealer :transition "slidedown" :reveal SHOW_CALENDAR
    (calendar 
            :day {formattime(SELECTED_TASK.due, "%d")}
            :month {formattime(SELECTED_TASK.due, "%m")}
            :year {formattime(SELECTED_TASK.due, "%Y")}
            ))
)))

