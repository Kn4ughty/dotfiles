(defwidget info-box [?classname ?ori]
    (box 
        :class "widget ${classname}"
        :hexpand false
        :vexpand false
        :width 400
        :height 140
        :orientation {ori == 'h' ? 'h' : 'v'}
        (children)
    )
)

; Thank you https://github.com/druskus20/eugh
; Revealer on hover, using children
(defwidget revealer-on-hover [var varname ?class ?duration ?transition]
  (box :class "${class} revealer-on-hover"
       :orientation "h"
       :space-evenly false
    (eventbox :class "eventbox"
              :onhover "eww update ${varname}=true"
              :onhoverlost "eww update ${varname}=false"
      (box :space-evenly false
        (revealer :reveal var
                  :transition {transition ?: "slideright"}
                  :duration {duration ?: "500ms"}
          (children :nth 1))
        (children :nth 0)
        (children :nth 2)))))


(defwidget revealer-on-click [var varname ?class ?duration ?transition]
  (box :class "${class} revealer-on-hover"
       :orientation "h"
       :space-evenly false
    (eventbox :class "eventbox"
              :onclick "eww update ${varname}=${!var}"
              :cursor "pointer"
              ;:onhoverlost "eww update ${varname}=false"
      (box :space-evenly false
        (revealer :reveal var
                  :transition {transition ?: "slideright"}
                  :duration {duration ?: "500ms"}
          (children :nth 1))
        (children :nth 0)
        (children :nth 2)))))


(defwidget revealer-toggler [var varname ?class ?duration ?transition]
  (box :class "${class} revealer-toggler"
       :orientation "h"
       :space-evenly false
    (eventbox :class "eventbox"
              :onclick "eww update ${varname}=${!var.toggled}"
              :cursor "pointer"
              :onhover "eww update ${varname}.hovered=true"
              :onhoverlost "eww update ${varname}.hovered=false"
      (box :space-evenly false
        (revealer :reveal {var.hovered || var.toggled}
                  :transition {transition ?: "slideright"}
                  :duration {duration ?: "500ms"}
          (children :nth 1))
        (children :nth 0)
        (children :nth 2)))))
